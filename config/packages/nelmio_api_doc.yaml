nelmio_api_doc:
    documentation:
        info:
            title: ProductsAPI
            description: Simple API for products management
            version: 1.0.0
        servers:
            - url: http://localhost
              description: API over HTTP
        paths:
            /api/products:
                get:
                    tags:
                        - Products
                    description: List of added products
                    parameters:
                        - name: page
                          in: query
                          required: false
                          schema:
                              type: integer
                              minimum: 1
                              example: 1
                        - name: limit
                          in: query
                          required: false
                          schema:
                              type: integer
                              minimum: 1
                              example: 100
                    responses:
                        200:
                            description: Products retrieved successfully
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/ProductGetDTO'
                        405:
                            $ref: '#/components/responses/MethodNotAllowed-405'
                        415:
                            $ref: '#/components/responses/UnsupportedMediaType-415'
                        500:
                            $ref: '#/components/responses/InternalServerError-500'

                post:
                    tags:
                        - Products
                    description: Create new product and attach to given categories by category CODES. If category not exists, then new is created
                    parameters:
                        - name: Content-Type
                          in: header
                          required: true
                          schema:
                              type: string
                              example: 'application/json'
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ProductAddRequestDTO'
                    responses:
                        201:
                            description: Product created successfully
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            message:
                                                type: string
                                                example: Product created successfully
                            headers:
                                Location:
                                    schema:
                                        type: string
                                        description: Endpoint for retrieve created product
                                        example: /products/123e4567-e89b-12d3-a456-426614174000
                        400:
                            $ref: '#/components/responses/BadRequest-400'
                        405:
                            $ref: '#/components/responses/MethodNotAllowed-405'
                        409:
                            $ref: '#/components/responses/ProductConflict-409'
                        415:
                            $ref: '#/components/responses/UnsupportedMediaType-415'
                        422:
                            $ref: '#/components/responses/UnprocessableEntity-422'
                        500:
                            $ref: '#/components/responses/InternalServerError-500'

                head:
                    tags:
                        - Products
                    description: Return metadata for products collection
                    responses:
                        200:
                            $ref: '#/components/responses/HeadResponse'


            /api/products/{UUID}:

                get:
                    tags:
                        - Products
                    summary: Get product identified by "UUID"
                    parameters:
                        - name: uuid
                          in: path
                          required: true
                          schema:
                              type: string
                              format: uuid
                              example: '123e4567-e89b-12d3-a456-426614174000'
                    responses:
                        200:
                            description: Product retrieved successfully
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/ProductGetDTO'
                        404:
                            $ref: "#/components/responses/ProductNotFound-404"
                        405:
                            $ref: '#/components/responses/MethodNotAllowed-405'
                        500:
                            $ref: '#/components/responses/InternalServerError-500'

                put:
                    tags:
                        - Products
                    summary: Update whole product identified by "UUID"
                    parameters:
                        - name: uuid
                          in: path
                          required: true
                          schema:
                              type: string
                              format: uuid
                              example: '123e4567-e89b-12d3-a456-426614174000'
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ProductReplaceRequestDTO'

                    responses:
                        204:
                            description: Product updated successfully
                        400:
                            $ref: '#/components/responses/BadRequest-400'
                        404:
                            $ref: "#/components/responses/ProductNotFound-404"
                        405:
                            $ref: '#/components/responses/MethodNotAllowed-405'
                        415:
                            $ref: '#/components/responses/UnsupportedMediaType-415'
                        422:
                            $ref: '#/components/responses/UnprocessableEntity-422'
                        500:
                            $ref: '#/components/responses/InternalServerError-500'

                patch:
                    tags:
                        - Products
                    summary: Partial update of product identified by "UUID"
                    parameters:
                        - name: uuid
                          in: path
                          required: true
                          schema:
                              type: string
                              format: uuid
                              example: '123e4567-e89b-12d3-a456-426614174000'
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ProductPartialUpdateRequestDTO'
                    responses:
                        204:
                            description: Product updated successfully
                        400:
                            $ref: '#/components/responses/BadRequest-400'
                        404:
                            $ref: "#/components/responses/ProductNotFound-404"
                        405:
                            $ref: '#/components/responses/MethodNotAllowed-405'
                        415:
                            $ref: '#/components/responses/UnsupportedMediaType-415'
                        422:
                            $ref: '#/components/responses/UnprocessableEntity-422'
                        500:
                            $ref: '#/components/responses/InternalServerError-500'

                delete:
                    tags:
                        - Products
                    summary: Delete product identified by "UUID"
                    parameters:
                        - name: uuid
                          in: path
                          required: true
                          schema:
                              type: string
                              format: uuid
                              example: '123e4567-e89b-12d3-a456-426614174000'
                    responses:
                        204:
                            description: Product deleted successfully
                        404:
                            $ref: "#/components/responses/ProductNotFound-404"
                        405:
                            $ref: '#/components/responses/MethodNotAllowed-405'
                        500:
                            $ref: '#/components/responses/InternalServerError-500'

                head:
                    tags:
                        - Products
                    description: Return metadata of product
                    parameters:
                        - name: uuid
                          in: path
                          required: true
                          schema:
                              type: string
                              format: uuid
                              example: '123e4567-e89b-12d3-a456-426614174000'
                    responses:
                        200:
                            $ref: '#/components/responses/HeadResponse'
                        404:
                            $ref: "#/components/responses/ProductNotFound-404"
                        405:
                            $ref: '#/components/responses/MethodNotAllowed-405'
                        500:
                            $ref: '#/components/responses/InternalServerError-500'

        components:
            responses:

                ProductNotFound-404:
                    description: Product not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Product with given id not exists

                ProductConflict-409:
                    description: Product with given id already exists
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: 'Product with given id already exists'

                UnprocessableEntity-422:
                    description: Payload validation failed
                    content:
                        application/json:
                            schema:
                                type: object
                                description: "Request payload validation failed"
                                properties:
                                    message:
                                        type: string
                                        example: "Request payload validation failed - price should be either positive or zero"

                UnsupportedMediaType-415:
                    description: Missing Content-Type header with 'application/json' value
                    content:
                        application/json:
                            schema:
                                type: object
                                description: "Content-Type header with 'application/json' value missing"
                                properties:
                                    message:
                                        type: string
                                        example: "Unsupported payload type. Allowed types: application/json"

                BadRequest-400:
                    description: Invalid json format for payload
                    content:
                        application/json:
                            schema:
                                type: object
                                description: "Only json data accepted in body payload"
                                properties:
                                    message:
                                        type: string
                                        example: "Request payload contains invalid \"json\" data."

                MethodNotAllowed-405:
                    description: Method not allowed
                    content:
                        application/json:
                            schema:
                                type: object
                                description: "Method not allowed"
                                properties:
                                    message:
                                        type: string
                                        example: "Method Not Allowed. Allowed methods: GET, POST, PUT, PATCH, DELETE"

                InternalServerError-500:
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
                                description: "Internal server error"
                                properties:
                                    message:
                                        type: string
                                        example: "Unexpected error - we will fix it as soon as possible - please try again later"

                HeadResponse:
                    description: Metadata retrieved successfully (EMPTY RESPONSE BODY - Don't know why NelmioApiDocBundle show "string" as example value)
                    headers:
                        Content-Type:
                            schema:
                                type: string
                                example: application/json

            schemas:
                ProductGetDTO:
                    type: object
                    description: Data Transfer Object representing a product retrieved from the system.
                    properties:
                        id:
                            type: string
                            format: uuid
                            description: The unique identifier of the product.
                            example: '123e4567-e89b-12d3-a456-426614174000'
                        title:
                            type: string
                            description: The name or title of the product.
                            example: 'Oakley Bxtr'
                        price:
                            type: string
                            description: The price of the product, represented as a string.
                            pattern: '^\d+(\.\d{1,2})?$'
                            example: "150.75"
                        categories:
                            type: array
                            description: A list of category names the product belongs to.
                            items:
                                type: string
                            minItems: 1
                            example: [ "ROAD", "GRAVEL", "PROMO" ]
                        createdAt:
                            type: string
                            format: date-time
                            description: The date and time when the product was created (ISO 8601 format).
                            example: '2023-10-27 10:30:00'
                        updatedAt:
                            type: string
                            format: date-time
                            nullable: true
                            description: The date and time when the product was last updated (ISO 8601 format), or null if never updated.
                            example: '2023-10-28 15:45:10'
                    required:
                        - id
                        - title
                        - price
                        - categories
                        - createdAt

                ProductAddRequestDTO:
                    type: object
                    description: Data Transfer Object representing a product creation payload.
                    properties:
                        id:
                            type: string
                            format: uuid
                            description: Optional unique identifier for the product. If omitted, the server might generate one.
                            nullable: true
                        title:
                            type: string
                            description: The name or title of the product.
                            example: Oakley Bxtr
                        price:
                            type: string
                            description: The price of the product, represented as a string.
                            pattern: '^\d+(\.\d{1,2})?$'
                            example: "70.50"
                        categories:
                            type: array
                            description: A list of categories codes the product belongs to. Must contain at least one category code.
                            items:
                                type: string
                            minItems: 1
                            example: [ "ROAD", "GRAVEL", "PROMO" ]
                    required:
                        - title
                        - price
                        - categories

                ProductPartialUpdateRequestDTO:
                    type: object
                    description: Data Transfer Object representing a partial product update payload.
                    properties:
                        title:
                            type: string
                            description: The name or title of the product.
                            example: Oakley Bxtr
                        price:
                            type: string
                            description: The price of the product, represented as a string.
                            pattern: '^\d+(\.\d{1,2})?$'
                            example: "70.50"
                        categories:
                            type: array
                            description: A list of categories codes the product belongs to. Must contain at least one category code.
                            items:
                                type: string
                            minItems: 1
                            example: [ "ROAD", "GRAVEL", "PROMO" ]

                ProductReplaceRequestDTO:
                    type: object
                    description: Data Transfer Object representing a whole product update payload.
                    properties:
                        title:
                            type: string
                            description: The name or title of the product.
                            example: Oakley Bxtr
                        price:
                            type: string
                            description: The price of the product, represented as a string.
                            pattern: '^\d+(\.\d{1,2})?$'
                            example: "70.50"
                        categories:
                            type: array
                            description: A list of categories codes the product belongs to. Must contain at least one category code.
                            items:
                                type: string
                            minItems: 1
                            example: [ "ROAD", "GRAVEL", "PROMO" ]


    areas: # to filter documented areas
        path_patterns:
            - ^!/api(?!/doc$)
